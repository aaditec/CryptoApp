// Generated by Dagger (https://dagger.dev).
package com.NITV.cryptoapp.di;

import com.NITV.cryptoapp.data.remote.CoinAPI;
import com.NITV.cryptoapp.domain.repository.CoinRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideCoinRepositoryFactory implements Factory<CoinRepository> {
  private final Provider<CoinAPI> coinAPIProvider;

  public AppModule_ProvideCoinRepositoryFactory(Provider<CoinAPI> coinAPIProvider) {
    this.coinAPIProvider = coinAPIProvider;
  }

  @Override
  public CoinRepository get() {
    return provideCoinRepository(coinAPIProvider.get());
  }

  public static AppModule_ProvideCoinRepositoryFactory create(Provider<CoinAPI> coinAPIProvider) {
    return new AppModule_ProvideCoinRepositoryFactory(coinAPIProvider);
  }

  public static CoinRepository provideCoinRepository(CoinAPI coinAPI) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideCoinRepository(coinAPI));
  }
}
